#!/bin/sh
CONFIGDIR="/var/lib/mailservermega"
MOUNTDIR="$CONFIGDIR/mnt"
RCLONECONFDIR="$CONFIGDIR/rclone"
MAILFILE="$CONFIGDIR/generated-emails.txt"
RCLONECRYPTPASS="YOURCRYPTEDPASS"

#prechecks

mkdir -p $MOUNTDIR/merged
mkdir -p $RCLONECONFDIR

is_mounted() {
    mount | awk -v DIR="$1" '{if ($3 == DIR) { exit 0}} ENDFILE{exit -1}'
}


addaccounts() {
    COUNT=$1
    for i in $(seq $COUNT); do

	email=$(/usr/bin/tmpmail -g)

	IFS='@' read -ra arremail <<< "$email"

	name=${arremail[0]}
	pass=$(tr -dc A-Za-z0-9 </dev/urandom | head -c $(shuf -i 16-24 -n 1) ; echo '')

	megaregout=$(/usr/bin/megareg --register --scripted --email $email --name $name --password $pass)
	megaverifycmd=${megaregout::-6}

	megalink=""

	re='^[0-9]+$'

	while true
	do
        mailcheck="$(tmpmail | sed -n 3p | sed -e 's/^\(.\{9\}\).*/\1/')"
        if ! [[ $mailcheck =~ $re ]] ; then
                sleep 5
        else
                mailid="$(tmpmail | sed -n 3p | sed -e 's/^\(.\{9\}\).*/\1/')"
                megalink="$(tmpmail -t $mailid | grep confirm | xargs)"
                megalink="https://mega.nz/#$megalink"
                break
        fi
	done
	
	megaresult="$(/usr/bin/$megaverifycmd $megalink)"

	if [ "$megaresult" == "Account registered successfully!" ]; then

                RCLONEFILE="$RCLONECONFDIR/$name.conf"

                mkdir "$MOUNTDIR/$name"

		rclonepass=$(/usr/bin/rclone obscure $pass)
		echo "New account registered"
		echo -e "$email $pass $name 1" >> $MAILFILE
		echo -e "[base-$name]" >> $RCLONEFILE
		echo -e "type = mega" >> $RCLONEFILE
		echo -e "user = $email" >> $RCLONEFILE
		echo -e "pass = $rclonepass" >> $RCLONEFILE
		echo -e "" >> $RCLONEFILE
		echo -e "[$name]" >> $RCLONEFILE
		echo -e "type = crypt" >> $RCLONEFILE
		echo -e "remote = base-$name:/" >> $RCLONEFILE
		echo -e "password = $RCLONECRYPTPASS" >> $RCLONEFILE		
		


        	sudo /bin/systemctl enable rclone-mega@$name.service
	else
		echo "Error registering new account"
		exit 1
	fi

    done
}

containsElement () {
        local e match="$1"
        shift
        for e; do [[ "$e" == "$match" ]] && return 0; done
        return 1
}

usage() {
	echo "Available options: "
	echo "  -s    : add single account"
        echo "  -a    : add new account(s)"
        echo "  -d    : remove and delete single account"
        echo "  -p    : purge and delete all accounts"
        echo "  -f    : fix and then delete non working mega accounts"
        echo "  -e    : enable all working mega mounts"
        echo "  -x    : disable all mega mounts"
        echo "  -m    : mount all working mega accounts and mergedfs"
        echo "  -u    : umount all mega accounts and mergedfs"
	echo "  -r    : remount all mega accounts and mergedfs"
	echo "  -E    : enable merged file system"
	echo "  -X    : disable merged file system"
        echo "  -M    : mount merged file system"
	echo "  -U    : umount merged file system"
	echo "  -R    : remount merged file system"
	echo "  -F    : force umount merged file system"
	echo "  -h    : show this help"
}

if [ $# -eq 0 ]
  then
    echo "No argument provided: "
    usage
fi

for arg in "$@"; do
shift
case "$arg" in 
        -s)
                addaccounts 1
                ;;
	-a)
		echo "Enter the number of the accounts you wish to create:"
		read COUNT 
		re='^[0-9]+$'
		if ! [[ $COUNT =~ $re ]] ; then
   			echo "Error: Not a number" >&2; exit 1
		fi
		
	        addaccounts $COUNT
		;;
	-d)
		cc=1
		while IFS= read -r line
		do
			echo "$cc - $line"
		cc=$(( cc + 1 ))
		done < "$MAILFILE"
		
		echo "Enter the number of the account you wish to delete:"
                read COUNT
                re='^[0-9]+$'
                if ! [[ $COUNT =~ $re ]] ; then
                        echo "Error: Not a number" >&2; exit 1
                fi

		sed -i '$COUNTd' $MAILFILE

		sudo /bin/systemctl disable rclone-mega@$name.service
		
		;;
	-p)
		echo "TODO"
		;;
	-f)
		count=0
		arrayfailed=()
		while IFS= read -r line; do
        		line=${line::-2}
        		if ! containsElement "$line" "${arrayfailed[@]}" && grep -Fxq "$line" "$MAILFILE"; then
                		arrayfailed+=( $line )
        		fi
		done < <( journalctl -u rclone-mega@* -n 200 | grep "couldn't login: Try again" | awk -F'"' '{print $2}')

		for i in "${arrayfailed[@]}"
		do
			mntpath="$MOUNTDIR/$i"
			cnffile="$RCLONECONFDIR/$i.conf"
			service="rclone-mega@$i.service"
			sudo systemctl stop $service
			sudo systemctl disable $service
			rm -rf $mntpath
			rm -rf $cnffile
			sed -i '/$i/d' $MAILFILE			
		done
		
		if (( ${#arrayfailed[@]} )); then
    			sudo systemctl restart rclone-merged.service
			echo "Some services were removed, restarting reclone-merged.service..."
		else
			echo "All services are working, skipping..."
		fi

		while IFS= read -r mountline; do
        	dirmount="$MOUNTDIR/$mountline"
        	if ! mountpoint -q -- "$dirmount"; then
                	printf '%s\n' "$dirmount is not a mount point, deleting it"
                	rm -rf $dirmount
        	fi
		done < <( ls --ignore=merged "$MOUNTDIR/")

		;;
	-e)
		input="$MAILFILE"
		IFS=''
		while read data; do
        		name=$(echo $data | awk '{split($0,a," "); print a[3]}')
			isworking=$(echo $data | awk '{split($0,a," "); print a[4]}')
			if [ $isworking == "1" ]; then
				sudo /bin/systemctl enable rclone-mega@$name.service
			fi
		done < "$input"
		;;
	-x)
		input="$MAILFILE"
                IFS=''
                while read data; do
                        name=$(echo $data | awk '{split($0,a," "); print a[3]}')
                        sudo /bin/systemctl disable rclone-mega@$name.service
                done < "$input"
		;;
	-m)
		#input="$MAILFILE"
                #IFS=''
                #while read data; do
                #        name=$(echo $data | awk '{split($0,a," "); print a[3]}')
                #        isworking=$(echo $data | awk '{split($0,a," "); print a[4]}')
		#	if [ $isworking == "1" ]; then
		#		sudo /bin/systemctl start rclone-mega@$name.service
      		#	fi
	        #done < "$input"
		sudo /bin/systemctl start rclone-mega@*.service --all
		sleep 30
		sudo /bin/systemctl start rclone-merged.service
		;;
	-u)
		sudo /bin/systemctl stop rclone-merged.service
		sudo /bin/systemctl stop rclone-mega@*.service
		#input="$MAILFILE"
                #IFS=''
                #while read data; do
                #        name=$(echo $data | awk '{split($0,a," "); print a[3]}')
                #        sudo /bin/systemctl stop rclone-mega@$name.service
                #done < "$input"
		;;
	-r)
		sudo /bin/systemctl stop rclone-merged.service
		#input="$MAILFILE"
                #IFS=''
                #while read data; do
                #        name=$(echo $data | awk '{split($0,a," "); print a[3]}')
                #        isworking=$(echo $data | awk '{split($0,a," "); print a[4]}')
                #        if [ $isworking == "1" ]; then
                #                sudo /bin/systemctl restart rclone-mega@$name.service
                #        fi
                #done < "$input"
		sudo /bin/systemctl stop rclone-mega@*.service
                sudo /bin/systemctl start rclone-mega@*.service --all
		sleep 120
                sudo /bin/systemctl start rclone-merged.service
		;;
	-E)
		sudo /bin/systemctl enable rclone-merged.service
		;;
	-X)
		sudo /bin/systemctl disable rclone-merged.service
        	;;
	-M)
		sudo /bin/systemctl start rclone-merged.service
                ;;
        -U)
		sudo /bin/systemctl stop rclone-merged.service
                ;;	
	-R)
		sudo /bin/systemctl restart rclone-merged.service
                ;;
	-F)
		sudo umount -l /var/lib/mailservermega/mnt/merged
		sudo /bin/systemctl stop rclone-merged.service
		;;
	-h)
        echo "Wrong argument provided"
        usage
        ;;
	*)
		echo "Wrong argument provided"
		usage
		;;
esac
done
